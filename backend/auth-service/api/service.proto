syntax = "proto3";

package grpcAuthServiceProtocol;

option go_package = "auth-service/pkg/grpcAuthServiceProtocol;grpcAuthServiceProtocol";

service grpcAuthServiceProtocol {
  rpc Login(UserLoginRequest) returns (UserLoginResponse);
  rpc Register(UserRegistrationRequest) returns (UserRegistrationResponse);
  rpc Verify(TokenVerifyRequest) returns (TokenVerifyResponse);
}

message UserInfo {
  uint32 id = 1;
  string name = 2;
  string email = 3;
}

message UserRegistrationRequest {
  string name = 1;
  string email = 2;
  string password = 4;
}

enum UserRegistrationState {
  OK = 0;
  USER_ALREADY_EXISTS = 1;
  INTERNAL_SERVICE_FAIL = 2;
}

message UserRegistrationResponse {
  uint32 state = 1;
}

message UserLoginRequest {
  string email = 1;
  string password = 2;
}

message UserLoginResponse {
  UserInfo user = 1;
  string token = 2;
}

message TokenVerifyRequest {
  string token = 1;
}

enum TokenVerifyState {
  VALID = 0;
  BAD_TOKEN = 1;
}

message TokenVerifyResponse {
  uint32 state = 1;
}
